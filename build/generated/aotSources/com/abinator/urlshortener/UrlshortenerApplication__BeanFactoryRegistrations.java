package com.abinator.urlshortener;

import com.abinator.urlshortener.config.RedisConfiguration__BeanDefinitions;
import com.abinator.urlshortener.controller.UrlController__BeanDefinitions;
import com.abinator.urlshortener.services.manager.impl.UrlManagerImpl__BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__BeanDefinitions;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.redis.RedisProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HateoasProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.netty.NettyProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.transaction.TransactionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.ServerProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.WebProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.MultipartProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor__BeanDefinitions;
import org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.data.redis.core.RedisKeyValueAdapter__BeanDefinitions;
import org.springframework.data.redis.core.RedisKeyValueTemplate__BeanDefinitions;
import org.springframework.data.redis.core.convert.KeyspaceConfiguration__BeanDefinitions;
import org.springframework.data.redis.core.convert.MappingConfiguration__BeanDefinitions;
import org.springframework.data.redis.core.convert.MappingRedisConverter__BeanDefinitions;
import org.springframework.data.redis.core.convert.RedisCustomConversions__BeanDefinitions;
import org.springframework.data.redis.core.convert.ReferenceResolverImpl__BeanDefinitions;
import org.springframework.data.redis.core.index.IndexConfiguration__BeanDefinitions;
import org.springframework.data.redis.core.mapping.RedisMappingContext__BeanDefinitions;
import org.springframework.data.rest.webmvc.RestControllerConfiguration__BeanDefinitions;
import org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration__BeanDefinitions;
import org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration__BeanDefinitions;
import org.springframework.data.web.config.SpringDataJacksonConfiguration__BeanDefinitions;
import org.springframework.hateoas.config.EntityLinksConfiguration__BeanDefinitions;
import org.springframework.hateoas.config.HateoasConfiguration__BeanDefinitions;
import org.springframework.hateoas.config.RestTemplateHateoasConfiguration__BeanDefinitions;
import org.springframework.hateoas.config.WebMvcEntityLinksConfiguration__BeanDefinitions;
import org.springframework.hateoas.config.WebMvcHateoasConfiguration__BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration__BeanDefinitions;
import org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration__BeanDefinitions;
import org.springframework.plugin.core.OrderAwarePluginRegistry__BeanDefinitions;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
public class UrlshortenerApplication__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("urlshortenerApplication", UrlshortenerApplication__BeanDefinitions.getUrlshortenerApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("redisConfiguration", RedisConfiguration__BeanDefinitions.getRedisConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("urlController", UrlController__BeanDefinitions.getUrlControllerBeanDefinition());
    beanFactory.registerBeanDefinition("urlManagerImpl", UrlManagerImpl__BeanDefinitions.getUrlManagerImplBeanDefinition());
    beanFactory.registerBeanDefinition("redisTemplate", RedisConfiguration__BeanDefinitions.getRedisTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getTomcatWebSocketConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("websocketServletWebServerCustomizer", WebSocketServletAutoConfiguration__BeanDefinitions.TomcatWebSocketConfiguration.getWebsocketServletWebServerCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration", WebSocketServletAutoConfiguration__BeanDefinitions.getWebSocketServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getEmbeddedTomcatBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactory", ServletWebServerFactoryConfiguration__BeanDefinitions.EmbeddedTomcat.getTomcatServletWebServerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("servletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatServletWebServerFactoryCustomizer", ServletWebServerFactoryAutoConfiguration__BeanDefinitions.getTomcatServletWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("server-org.springframework.boot.autoconfigure.web.ServerProperties", ServerProperties__BeanDefinitions.getServerPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("webServerFactoryCustomizerBeanPostProcessor", WebServerFactoryCustomizerBeanPostProcessor__BeanDefinitions.getWebServerFactoryCustomizerBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageRegistrarBeanPostProcessor", ErrorPageRegistrarBeanPostProcessor__BeanDefinitions.getErrorPageRegistrarBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServlet", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletConfiguration.getDispatcherServletBeanDefinition());
    beanFactory.registerBeanDefinition("spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties", WebMvcProperties__BeanDefinitions.getWebMvcPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("dispatcherServletRegistration", DispatcherServletAutoConfiguration__BeanDefinitions.DispatcherServletRegistrationConfiguration.getDispatcherServletRegistrationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration", DispatcherServletAutoConfiguration__BeanDefinitions.getDispatcherServletAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskExecutorBuilder", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutionAutoConfiguration__BeanDefinitions.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getWhitelabelErrorViewConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("error", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getErrorBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.WhitelabelErrorViewConfiguration.getBeanNameViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getDefaultErrorViewResolverConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("conventionErrorViewResolver", ErrorMvcAutoConfiguration__BeanDefinitions.DefaultErrorViewResolverConfiguration.getConventionErrorViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.web-org.springframework.boot.autoconfigure.web.WebProperties", WebProperties__BeanDefinitions.getWebPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("errorAttributes", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorAttributesBeanDefinition());
    beanFactory.registerBeanDefinition("basicErrorController", ErrorMvcAutoConfiguration__BeanDefinitions.getBasicErrorControllerBeanDefinition());
    beanFactory.registerBeanDefinition("errorPageCustomizer", ErrorMvcAutoConfiguration__BeanDefinitions.getErrorPageCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("preserveErrorControllerTargetClassPostProcessor", ErrorMvcAutoConfiguration__BeanDefinitions.getPreserveErrorControllerTargetClassPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getEnableWebMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerAdapter", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getRequestMappingHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("welcomePageNotAcceptableHandlerMapping", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getWelcomePageNotAcceptableHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("localeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getLocaleResolverBeanDefinition());
    beanFactory.registerBeanDefinition("themeResolver", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("flashMapManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getFlashMapManagerBeanDefinition());
    beanFactory.registerBeanDefinition("mvcConversionService", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("mvcValidator", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("mvcContentNegotiationManager", WebMvcAutoConfiguration__BeanDefinitions.EnableWebMvcConfiguration.getMvcContentNegotiationManagerBeanDefinition());
    beanFactory.registerBeanDefinition("requestMappingHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getRequestMappingHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPatternParser", WebMvcConfigurationSupport__BeanDefinitions.getMvcPatternParserBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUrlPathHelper", WebMvcConfigurationSupport__BeanDefinitions.getMvcUrlPathHelperBeanDefinition());
    beanFactory.registerBeanDefinition("mvcPathMatcher", WebMvcConfigurationSupport__BeanDefinitions.getMvcPathMatcherBeanDefinition());
    beanFactory.registerBeanDefinition("viewControllerHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getViewControllerHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("beanNameHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getBeanNameHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("routerFunctionMapping", WebMvcConfigurationSupport__BeanDefinitions.getRouterFunctionMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getResourceHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("mvcResourceUrlProvider", WebMvcConfigurationSupport__BeanDefinitions.getMvcResourceUrlProviderBeanDefinition());
    beanFactory.registerBeanDefinition("defaultServletHandlerMapping", WebMvcConfigurationSupport__BeanDefinitions.getDefaultServletHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("handlerFunctionAdapter", WebMvcConfigurationSupport__BeanDefinitions.getHandlerFunctionAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("mvcUriComponentsContributor", WebMvcConfigurationSupport__BeanDefinitions.getMvcUriComponentsContributorBeanDefinition());
    beanFactory.registerBeanDefinition("httpRequestHandlerAdapter", WebMvcConfigurationSupport__BeanDefinitions.getHttpRequestHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("simpleControllerHandlerAdapter", WebMvcConfigurationSupport__BeanDefinitions.getSimpleControllerHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("handlerExceptionResolver", WebMvcConfigurationSupport__BeanDefinitions.getHandlerExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcViewResolver", WebMvcConfigurationSupport__BeanDefinitions.getMvcViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("mvcHandlerMappingIntrospector", WebMvcConfigurationSupport__BeanDefinitions.getMvcHandlerMappingIntrospectorBeanDefinition());
    beanFactory.registerBeanDefinition("viewNameTranslator", WebMvcConfigurationSupport__BeanDefinitions.getViewNameTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getWebMvcAutoConfigurationAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("defaultViewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getDefaultViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("viewResolver", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getViewResolverBeanDefinition());
    beanFactory.registerBeanDefinition("requestContextFilter", WebMvcAutoConfiguration__BeanDefinitions.WebMvcAutoConfigurationAdapter.getRequestContextFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration", WebMvcAutoConfiguration__BeanDefinitions.getWebMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("formContentFilter", WebMvcAutoConfiguration__BeanDefinitions.getFormContentFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getClassProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("forceAutoProxyCreatorToUseClassProxying", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getForceAutoProxyCreatorToUseClassProxyingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getJacksonObjectMapperBuilderCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("standardJacksonObjectMapperBuilderCustomizer", JacksonAutoConfiguration__BeanDefinitions.Jackson2ObjectMapperBuilderCustomizerConfiguration.getStandardJacksonObjectMapperBuilderCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties", JacksonProperties__BeanDefinitions.getJacksonPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapperBuilder", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperBuilderConfiguration.getJacksonObjectMapperBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("parameterNamesModule", JacksonAutoConfiguration__BeanDefinitions.ParameterNamesModuleConfiguration.getParameterNamesModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonObjectMapper", JacksonAutoConfiguration__BeanDefinitions.JacksonObjectMapperConfiguration.getJacksonObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration", LettuceConnectionConfiguration__BeanDefinitions.getLettuceConnectionConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lettuceClientResources", LettuceConnectionConfiguration__BeanDefinitions.getLettuceClientResourcesBeanDefinition());
    beanFactory.registerBeanDefinition("redisConnectionFactory", LettuceConnectionConfiguration__BeanDefinitions.getRedisConnectionFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration", RedisAutoConfiguration__BeanDefinitions.getRedisAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("redisConnectionDetails", RedisAutoConfiguration__BeanDefinitions.getRedisConnectionDetailsBeanDefinition());
    beanFactory.registerBeanDefinition("stringRedisTemplate", RedisAutoConfiguration__BeanDefinitions.getStringRedisTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties", RedisProperties__BeanDefinitions.getRedisPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("persistenceExceptionTranslationPostProcessor", PersistenceExceptionTranslationAutoConfiguration__BeanDefinitions.getPersistenceExceptionTranslationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration", RedisReactiveAutoConfiguration__BeanDefinitions.getRedisReactiveAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveRedisTemplate", RedisReactiveAutoConfiguration__BeanDefinitions.getReactiveRedisTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("reactiveStringRedisTemplate", RedisReactiveAutoConfiguration__BeanDefinitions.getReactiveStringRedisTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration", RedisRepositoriesAutoConfiguration__BeanDefinitions.getRedisRepositoriesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("redisIndexConfiguration#0", IndexConfiguration__BeanDefinitions.getRedisIndexConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("redisKeyspaceConfiguration#0", KeyspaceConfiguration__BeanDefinitions.getRedisKeyspaceConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("redisMappingConfiguration#0", MappingConfiguration__BeanDefinitions.getRedisMappingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("keyValueMappingContext", RedisMappingContext__BeanDefinitions.getKeyValueMappingContextBeanDefinition());
    beanFactory.registerBeanDefinition("redisCustomConversions", RedisCustomConversions__BeanDefinitions.getRedisCustomConversionsBeanDefinition());
    beanFactory.registerBeanDefinition("redisReferenceResolver", ReferenceResolverImpl__BeanDefinitions.getRedisReferenceResolverBeanDefinition());
    beanFactory.registerBeanDefinition("redisConverter", MappingRedisConverter__BeanDefinitions.getRedisConverterBeanDefinition());
    beanFactory.registerBeanDefinition("redisKeyValueAdapter", RedisKeyValueAdapter__BeanDefinitions.getRedisKeyValueAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("redisKeyValueTemplate", RedisKeyValueTemplate__BeanDefinitions.getRedisKeyValueTemplateBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("stringHttpMessageConverter", HttpMessageConvertersAutoConfiguration__BeanDefinitions.StringHttpMessageConverterConfiguration.getStringHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("mappingJackson2HttpMessageConverter", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.MappingJackson2HttpMessageConverterConfiguration.getMappingJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration", JacksonHttpMessageConvertersConfiguration__BeanDefinitions.getJacksonHttpMessageConvertersConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getHttpMessageConvertersAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageConverters", HttpMessageConvertersAutoConfiguration__BeanDefinitions.getMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration", HalMediaTypeConfiguration__BeanDefinitions.getHalMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halLinkDisocoverer", HalMediaTypeConfiguration__BeanDefinitions.getHalLinkDisocovererBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfiguration", HalFormsMediaTypeConfiguration__BeanDefinitions.getHalFormsMediaTypeConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsLinkDiscoverer", HalFormsMediaTypeConfiguration__BeanDefinitions.getHalFormsLinkDiscovererBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsTemplatePropertyWriter", HalFormsMediaTypeConfiguration__BeanDefinitions.getHalFormsTemplatePropertyWriterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.HateoasConfiguration", HateoasConfiguration__BeanDefinitions.getHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("messageResolver", HateoasConfiguration__BeanDefinitions.getMessageResolverBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConverters", HateoasConfiguration__BeanDefinitions.getHypermediaWebMvcConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("defaultRelProvider", HateoasConfiguration__BeanDefinitions.getDefaultRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("annotationRelProvider", HateoasConfiguration__BeanDefinitions.getAnnotationRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("_relProvider", HateoasConfiguration__BeanDefinitions.getRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("relProviderPluginRegistry", HateoasConfiguration__BeanDefinitions.getRelProviderPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscoverers", HateoasConfiguration__BeanDefinitions.getLinkDiscoverersBeanDefinition());
    beanFactory.registerBeanDefinition("linkDiscovererRegistry", OrderAwarePluginRegistry__BeanDefinitions.getLinkDiscovererRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcEntityLinksConfiguration", WebMvcEntityLinksConfiguration__BeanDefinitions.getWebMvcEntityLinksConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcEntityLinks", WebMvcEntityLinksConfiguration__BeanDefinitions.getWebMvcEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinksPluginRegistry", EntityLinksConfiguration__BeanDefinitions.getEntityLinksPluginRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("delegatingEntityLinks", EntityLinksConfiguration__BeanDefinitions.getDelegatingEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.WebMvcHateoasConfiguration", WebMvcHateoasConfiguration__BeanDefinitions.getWebMvcHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaWebMvcConfigurer", WebMvcHateoasConfiguration__BeanDefinitions.getHypermediaWebMvcConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelProcessorInvoker", WebMvcHateoasConfiguration__BeanDefinitions.getRepresentationModelProcessorInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRepresentionModelProcessorConfigurator", WebMvcHateoasConfiguration__BeanDefinitions.getHypermediaRepresentionModelProcessorConfiguratorBeanDefinition());
    beanFactory.registerBeanDefinition("webMvcLinkBuilderFactory", WebMvcHateoasConfiguration__BeanDefinitions.getWebMvcLinkBuilderFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.hateoas.config.RestTemplateHateoasConfiguration", RestTemplateHateoasConfiguration__BeanDefinitions.getRestTemplateHateoasConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateBeanPostProcessor", RestTemplateHateoasConfiguration__BeanDefinitions.getHypermediaRestTemplateBeanPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("hypermediaRestTemplateConfigurer", RestTemplateHateoasConfiguration__BeanDefinitions.getHypermediaRestTemplateConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.RestControllerConfiguration", RestControllerConfiguration__BeanDefinitions.getRestControllerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryController", RestControllerConfiguration__BeanDefinitions.getRepositoryControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryEntityController", RestControllerConfiguration__BeanDefinitions.getRepositoryEntityControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryPropertyReferenceController", RestControllerConfiguration__BeanDefinitions.getRepositoryPropertyReferenceControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySearchController", RestControllerConfiguration__BeanDefinitions.getRepositorySearchControllerBeanDefinition());
    beanFactory.registerBeanDefinition("repositorySchemaController", RestControllerConfiguration__BeanDefinitions.getRepositorySchemaControllerBeanDefinition());
    beanFactory.registerBeanDefinition("alpsController", RestControllerConfiguration__BeanDefinitions.getAlpsControllerBeanDefinition());
    beanFactory.registerBeanDefinition("profileController", RestControllerConfiguration__BeanDefinitions.getProfileControllerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.web.config.SpringDataJacksonConfiguration", SpringDataJacksonConfiguration__BeanDefinitions.getSpringDataJacksonConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonGeoModule", SpringDataJacksonConfiguration__BeanDefinitions.getJacksonGeoModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryRestMvcConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("repositories", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoriesBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRelProvider", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryRelProviderBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntities", RepositoryRestMvcConfiguration__BeanDefinitions.getPersistentEntitiesBeanDefinition());
    beanFactory.registerBeanDefinition("defaultConversionService", RepositoryRestMvcConfiguration__BeanDefinitions.getDefaultConversionServiceBeanDefinition());
    beanFactory.registerBeanDefinition("validatingRepositoryEventListener", RepositoryRestMvcConfiguration__BeanDefinitions.getValidatingRepositoryEventListenerBeanDefinition());
    beanFactory.registerBeanDefinition("jpaHelper", RepositoryRestMvcConfiguration__BeanDefinitions.getJpaHelperBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestConfiguration", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryRestConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("projectionDefinitionRegistrar", RepositoryRestMvcConfiguration__BeanDefinitions.getProjectionDefinitionRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("metadataConfiguration", RepositoryRestMvcConfiguration__BeanDefinitions.getMetadataConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("baseUri", RepositoryRestMvcConfiguration__BeanDefinitions.getBaseUriBeanDefinition());
    beanFactory.registerBeanDefinition("annotatedEventHandlerInvoker", RepositoryRestMvcConfiguration__BeanDefinitions.getAnnotatedEventHandlerInvokerBeanDefinition());
    beanFactory.registerBeanDefinition("repoRequestArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getRepoRequestArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMetadataHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getResourceMetadataHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdHandlerMethodArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getBackendIdHandlerMethodArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("eTagArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getETagArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("entityLinks", RepositoryRestMvcConfiguration__BeanDefinitions.getEntityLinksBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getPersistentEntityArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("jsonSchemaConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getJsonSchemaConverterBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonHttpMessageConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getHalJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("halFormsJacksonHttpMessageConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getHalFormsJacksonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("uriListHttpMessageConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getUriListHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryExporterHandlerAdapter", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryExporterHandlerAdapterBeanDefinition());
    beanFactory.registerBeanDefinition("restHandlerMapping", RepositoryRestMvcConfiguration__BeanDefinitions.getRestHandlerMappingBeanDefinition());
    beanFactory.registerBeanDefinition("resourceMappings", RepositoryRestMvcConfiguration__BeanDefinitions.getResourceMappingsBeanDefinition());
    beanFactory.registerBeanDefinition("linkCollector", RepositoryRestMvcConfiguration__BeanDefinitions.getLinkCollectorBeanDefinition());
    beanFactory.registerBeanDefinition("excerptProjector", RepositoryRestMvcConfiguration__BeanDefinitions.getExcerptProjectorBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryRestExceptionHandler", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryRestExceptionHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("repositoryInvokerFactory", RepositoryRestMvcConfiguration__BeanDefinitions.getRepositoryInvokerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("defaultMessageConverters", RepositoryRestMvcConfiguration__BeanDefinitions.getDefaultMessageConvertersBeanDefinition());
    beanFactory.registerBeanDefinition("alpsJsonHttpMessageConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getAlpsJsonHttpMessageConverterBeanDefinition());
    beanFactory.registerBeanDefinition("pageableResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getPageableResolverBeanDefinition());
    beanFactory.registerBeanDefinition("sortResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getSortResolverBeanDefinition());
    beanFactory.registerBeanDefinition("backendIdConverterRegistry", RepositoryRestMvcConfiguration__BeanDefinitions.getBackendIdConverterRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("auditableBeanWrapperFactory", RepositoryRestMvcConfiguration__BeanDefinitions.getAuditableBeanWrapperFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("httpHeadersPreparer", RepositoryRestMvcConfiguration__BeanDefinitions.getHttpHeadersPreparerBeanDefinition());
    beanFactory.registerBeanDefinition("selfLinkProvider", RepositoryRestMvcConfiguration__BeanDefinitions.getSelfLinkProviderBeanDefinition());
    beanFactory.registerBeanDefinition("associationLinks", RepositoryRestMvcConfiguration__BeanDefinitions.getAssociationLinksBeanDefinition());
    beanFactory.registerBeanDefinition("representationModelAssemblersArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getRepresentationModelAssemblersArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("persistentEntityResourceAssemblerArgumentResolver", RepositoryRestMvcConfiguration__BeanDefinitions.getPersistentEntityResourceAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("enumTranslator", RepositoryRestMvcConfiguration__BeanDefinitions.getEnumTranslatorBeanDefinition());
    beanFactory.registerBeanDefinition("alpsConverter", RepositoryRestMvcConfiguration__BeanDefinitions.getAlpsConverterBeanDefinition());
    beanFactory.registerBeanDefinition("profileResourceProcessor", RepositoryRestMvcConfiguration__BeanDefinitions.getProfileResourceProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssembler", HateoasAwareSpringDataWebConfiguration__BeanDefinitions.getPagedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("pagedResourcesAssemblerArgumentResolver", HateoasAwareSpringDataWebConfiguration__BeanDefinitions.getPagedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssembler", HateoasAwareSpringDataWebConfiguration__BeanDefinitions.getSlicedResourcesAssemblerBeanDefinition());
    beanFactory.registerBeanDefinition("slicedResourcesAssemblerArgumentResolver", HateoasAwareSpringDataWebConfiguration__BeanDefinitions.getSlicedResourcesAssemblerArgumentResolverBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration", RepositoryRestMvcAutoConfiguration__BeanDefinitions.getRepositoryRestMvcAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("springBootRepositoryRestConfigurer", RepositoryRestMvcAutoConfiguration__BeanDefinitions.getSpringBootRepositoryRestConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties", RepositoryRestProperties__BeanDefinitions.getRepositoryRestPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration", HypermediaAutoConfiguration__BeanDefinitions.getHypermediaAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationJsonHalConfiguration", HypermediaAutoConfiguration__BeanDefinitions.getApplicationJsonHalConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties", HateoasProperties__BeanDefinitions.getHateoasPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration", NettyAutoConfiguration__BeanDefinitions.getNettyAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties", NettyProperties__BeanDefinitions.getNettyPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("taskSchedulerBuilder", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration", TransactionAutoConfiguration__BeanDefinitions.getTransactionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("platformTransactionManagerCustomizers", TransactionAutoConfiguration__BeanDefinitions.getPlatformTransactionManagerCustomizersBeanDefinition());
    beanFactory.registerBeanDefinition("spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties", TransactionProperties__BeanDefinitions.getTransactionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilderConfigurer", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("restTemplateBuilder", RestTemplateAutoConfiguration__BeanDefinitions.getRestTemplateBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("tomcatWebServerFactoryCustomizer", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.TomcatWebServerFactoryCustomizerConfiguration.getTomcatWebServerFactoryCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration", EmbeddedWebServerFactoryCustomizerAutoConfiguration__BeanDefinitions.getEmbeddedWebServerFactoryCustomizerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration", HttpEncodingAutoConfiguration__BeanDefinitions.getHttpEncodingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("characterEncodingFilter", HttpEncodingAutoConfiguration__BeanDefinitions.getCharacterEncodingFilterBeanDefinition());
    beanFactory.registerBeanDefinition("localeCharsetMappingsCustomizer", HttpEncodingAutoConfiguration__BeanDefinitions.getLocaleCharsetMappingsCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", MultipartAutoConfiguration__BeanDefinitions.getMultipartAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("multipartConfigElement", MultipartAutoConfiguration__BeanDefinitions.getMultipartConfigElementBeanDefinition());
    beanFactory.registerBeanDefinition("multipartResolver", MultipartAutoConfiguration__BeanDefinitions.getMultipartResolverBeanDefinition());
    beanFactory.registerBeanDefinition("spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties", MultipartProperties__BeanDefinitions.getMultipartPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "taskExecutor");
  }
}
